version: '3.8'

services:
  database:
    build: ./database
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      - "${DB_PORT}:5432"
    restart: unless-stopped

  backend:
    build: ./backend
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
      CORS_ORIGIN: ${CORS_ORIGIN}
      LOG_LEVEL: ${LOG_LEVEL}
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      - database
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:${PORT}/healthcheck > /dev/null || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: >
      sh -c "if [ \"$NODE_ENV\" = 'development' ]; then npm run dev;
             else npm start; fi"

  frontend:
    build: ./frontend
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
