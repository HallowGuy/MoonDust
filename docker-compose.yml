version: "3.9"

services:
  # ------------------------
  # Ton backend
  # ------------------------
  backend:
    build: ./backend
    container_name: ${BACKEND_CONTAINER_NAME}
    environment:
      - PGHOST=${PGHOST}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGDATABASE=${PGDATABASE}
      - PGPORT=${PGPORT}
    ports:
      - "${BACKEND_PORT_HOST}:${BACKEND_PORT_CONTAINER}"
    volumes:
      - ./backend/uploads:/usr/src/app/uploads
    depends_on:
      - db

  # ------------------------
  # Ton frontend
  # ------------------------
  frontend:
    build: ./frontend
    container_name: ${FRONTEND_CONTAINER_NAME}
    ports:
      - "${FRONTEND_PORT_HOST}:${FRONTEND_PORT_CONTAINER}"
    depends_on:
      - backend

  # ------------------------
  # PostgreSQL
  # ------------------------
  db:
    image: ${DB_IMAGE}
    container_name: ${DB_CONTAINER_NAME}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${DB_PORT_HOST}:${DB_PORT_CONTAINER}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # ------------------------
  # PgAdmin
  # ------------------------
  pgadmin:
    image: ${PGADMIN_IMAGE}
    container_name: ${PGADMIN_CONTAINER_NAME}
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT_HOST}:${PGADMIN_PORT_CONTAINER}"
    depends_on:
      - db

  # ------------------------
  # n8n (Workflow Automation avec Postgres)
  # ------------------------
  n8n:
    image: n8nio/n8n
    container_name: n8n
    ports:
      - "5678:5678"
    environment:
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: db
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: n8n
      DB_POSTGRESDB_USER: postgres
      DB_POSTGRESDB_PASSWORD: postgres
      N8N_BASIC_AUTH_ACTIVE: "false"
      N8N_HOST: n8n
      N8N_PORT: 5678
      N8N_PROTOCOL: http
      N8N_CORS_ALLOW_ORIGIN: "http://localhost:3000"
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      - db

volumes:
  postgres_data:
  n8n_data:
