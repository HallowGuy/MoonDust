# Basic Nginx configuration acting as a reverse proxy
worker_processes 1;

events { worker_connections 1024; }

http {
    server {
        # Listen on the HTTP port
        listen 80;

        # Protect the Angular frontend with Keycloak authentication
        location / {
            auth_request /auth;
            error_page 401 =302 http://keycloak:8080/realms/master/protocol/openid-connect/auth?client_id=example-client&redirect_uri=$scheme://$host$request_uri;
            proxy_pass http://frontend-angular:4200;
        }

        # Endpoint used by auth_request to validate tokens via Keycloak
        location = /auth {
            internal;
            proxy_pass http://keycloak:8080/realms/master/protocol/openid-connect/userinfo;
            proxy_pass_request_body off;
            proxy_set_header Authorization $http_authorization;
        }

        # Forward API calls to the backend service
        location /api/ {
            auth_request /auth;
            error_page 401 =302 http://keycloak:8080/realms/master/protocol/openid-connect/auth?client_id=example-client&redirect_uri=$scheme://$host$request_uri;
            proxy_pass http://backend:8080/;
        }
    }
}
